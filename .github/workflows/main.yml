name: CI/CD

on: [push, pull_request]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Composer Cache
        id: cache-composer
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.cache-composer.outputs.dir }}
          key: cache-composer-${{ hashFiles('composer.lock') }}
      - name: Install Composer Packages
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Lint Code
        run: composer test:lint

      - name: Setup Yarn Cache
        id: cache-yarn
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.cache-yarn.outputs.dir }}
          key: cache-yarn-${{ hashFiles('yarn.lock') }}
      - name: Install Javascript Packages
        run: yarn install --silent --ignore-scripts --non-interactive --no-progress
      - name: Build Javascript Packages
        run: yarn production

#      - name: Test Application
#        run: php artisan test

      - name: Persist CSS Assets
        if: github.repository == 'iksaku/FIMEats' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v1
        with:
            name: assets-css
            path: public/css
      - name: Persist Javascript Assets
        if: github.repository == 'iksaku/FIMEats' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v1
        with:
          name: assets-js
          path: public/js
      - name: Persist Mix Manifest
        if: github.repository == 'iksaku/FIMEats' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v1
        with:
          name: mix-manifest
          path: public/mix-manifest.json

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.repository == 'iksaku/FIMEats' && github.ref == 'refs/heads/master'
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          lfs: true

      - name: Upload Images to CDN
        uses: iksaku/openstack-swift-action@stein
        env:
          OS_AUTH_URL: ${{ secrets.CDN_AUTH_URL }}
          OS_PASSWORD: ${{ secrets.CDN_PASSWORD }}
          OS_PROJECT_NAME: ${{ secrets.CDN_PROJECT_NAME }}
          OS_REGION_NAME: ${{ secrets.CDN_REGION_NAME }}
          OS_USERNAME: ${{ secrets.CDN_USERNAME }}
          OS_USER_DOMAIN_NAME: ${{ secrets.CDN_USER_DOMAIN_NAME }}
        with:
          args: upload --changed --object-name img fimeats public/img

      - name: Restore CSS Assets
        uses: actions/download-artifact@v1
        with:
          name: assets-css
      - name: Restore Javascript Assets
        uses: actions/download-artifact@v1
        with:
          name: assets-js
      - name: Restore Mix Manifest
        uses: actions/download-artifact@v1
        with:
          name: mix-manifest
      - name: Fix Assets Path
        run: |
          mv assets-css public/css
          mv assets-js public/js
          mv mix-manifest/mix-manifest.json public
          rm -rf mix-manifest

      - name: Setup Composer Cache
        id: cache-composer
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.cache-composer.outputs.dir }}
          key: cache-composer-${{ hashFiles('composer.lock') }}
      - name: Install Composer Packages
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Deploy to Production
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          SSH_PATH=$HOME/.ssh

          mkdir -p $SSH_PATH
          chmod 700 $SSH_PATH

          touch $SSH_PATH/known_hosts
          chmod 600 $SSH_PATH/known_hosts

          eval $(ssh-agent -s)

          echo "$DEPLOY_KEY" | tr -d '\r' | ssh-add -

          ssh-keyscan -H $DEPLOY_HOST >> $SSH_PATH/known_hosts

          php artisan deploy -s upload
