name: CI/CD

on:
  - push
  - pull_request

jobs:
  php-ci:
    name: PHP Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Composer Install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Style Check
        run: composer test:lint
  node-ci:
    name: NodeJS Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        run: |
          shopt -s extglob
          rm -rfv public/!(js|css)
      - name: Yarn Install
        run: yarn install
      - name: Build Development Assets
        run: yarn dev
      - name: Run Tests
        run: echo "No tests have been configured for NodeJS"
      - name: Build Production Assets
        run: yarn prod
      - name: Persist Node Assets as Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: node-assets
          path: public
# TODO: Fix SSH_KEY
#  cd:
#    needs:
#      - php-ci
#      - node-ci
#    name: Deployment
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        if: github.event_name != 'pull_request' && github.repository == 'iksaku/fimeats'
#        uses: actions/checkout@v1
#        with:
#          lfs: true
#      - name: Download Node Assets
#        uses: actions/download-artifact@v1
#        with:
#          name: node-assets
#      - name: Setup SSH
#        if: github.event_name != 'pull_request' && github.repository == 'iksaku/fimeats'
#        env:
#          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
#          SSH_KEY: ${{ secrets.SSH_KEY }}
#        run: |
#          SSH_PATH="$HOME/.ssh"
#          mkdir -p "$SSH_PATH"
#          touch "$SSH_PATH/known_hosts"
#          echo $SSH_KEY > "$SSH_PATH/ssh_key"
#          chmod 700 "$SSH_PATH"
#          chmod 600 "$SSH_PATH/known_hosts" "$SSH_PATH/ssh_key"
#          eval $(ssh-agent)
#          ssh-add "$SSH_PATH/ssh_key"
#          ssh-keyscan -H "$DEPLOY_HOST" >> "$SSH_PATH/known_hosts"
#      - name: Upload Assets to CDN
#        if: github.event_name != 'pull_request' && github.repository == 'iksaku/fimeats'
#        uses: iksaku/openstack-swift-action@stein
#        env:
#          OS_AUTH_URL: ${{ secrets.CDN_AUTH_URL }}
#          OS_PASSWORD: ${{ secrets.CDN_PASSWORD }}
#          OS_REGION_NAME: ${{ secrets.CDN_REGION }}
#          OS_TENANT_ID: ${{ secrets.CDN_TENANT_ID }}
#          OS_USERNAME: ${{ secrets.CDN_USERNAME }}
#        with:
#          args: upload --object-name img jorgeglz-cdn/fimeats public/img
#      - name: Deploy Code to Production
#        if: github.event_name != 'pull_request' && github.repository == 'iksaku/fimeats' && github.ref == 'master'
#        env:
#          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
#          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
#        run: php artisan deploy -s upload
